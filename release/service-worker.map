{"version":3,"sources":["service-worker.js"],"names":["CACHE_NAME","self","addEventListener","log","waitUntil","caches","open","then","cache","addAll","catch","console","error","e","respondWith","match","event","request","response","fetch"],"mappings":";AAAA,IAAMA,EAAa,qBAEnBC,KAAKC,iBAAiB,UAAW,SAAS,GAChCC,QAAAA,IAAI,iBACNC,EAAAA,UACJC,OAAOC,KAAKN,GAAYO,KAAK,SAAS,GAC7BC,OAAAA,EACJC,QAAQ,IAAK,cAAe,cAC5BC,MAAM,SAAA,GAAKC,OAAAA,QAAQC,MAAMC,UAKlCZ,KAAKC,iBAAiB,QAAS,SAAS,GAChCY,EAAAA,YACJT,OAAOU,MAAMC,EAAMC,SAASV,KAAK,SAAY,GACpCW,OAAAA,GAAsBC,MAAMH,EAAMC","file":"service-worker.map","sourceRoot":"../src","sourcesContent":["const CACHE_NAME = \"state-cache-v0.1.0\";\n\nself.addEventListener(\"install\", event => {\n  console.log(\"installed SW.\");\n  event.waitUntil(\n    caches.open(CACHE_NAME).then(cache => {\n      return cache\n        .addAll([\"/\", \"/index.html\", \"/index.js\"])\n        .catch(e => console.error(e));\n    })\n  );\n});\n\nself.addEventListener(\"fetch\", event => {\n  event.respondWith(\n    caches.match(event.request).then(response => {\n      return response ? response : fetch(event.request);\n    })\n  );\n});\n"]}